/*
 * MetaFab API
 *
 *  Complete MetaFab API references and guides can be found at: https://trymetafab.com
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: metafabproject@gmail.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Org.MetaFab.Client;
using Org.MetaFab.Api;
using Org.MetaFab.Model;

namespace Org.MetaFab.Test
{
    /// <summary>
    ///  Class for testing WalletsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class WalletsApiTests
    {
        private WalletsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new WalletsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of WalletsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOf' WalletsApi
            //Assert.IsInstanceOf(typeof(WalletsApi), instance);
        }

        
        /// <summary>
        /// Test GetWalletBalances
        /// </summary>
        [Test]
        public void GetWalletBalancesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string walletId = null;
            //var response = instance.GetWalletBalances(walletId);
            //Assert.IsInstanceOf(typeof(Dictionary<string, decimal>), response, "response is Dictionary<string, decimal>");
        }
        
        /// <summary>
        /// Test GetWalletTransactions
        /// </summary>
        [Test]
        public void GetWalletTransactionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string walletId = null;
            //var response = instance.GetWalletTransactions(walletId);
            //Assert.IsInstanceOf(typeof(List<TransactionModel>), response, "response is List<TransactionModel>");
        }
        
    }

}
